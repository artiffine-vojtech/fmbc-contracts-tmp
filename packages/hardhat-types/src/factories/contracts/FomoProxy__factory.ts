/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { FomoProxy, FomoProxyInterface } from "../../contracts/FomoProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_fomo",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "controller",
    outputs: [
      {
        internalType: "contract IIncentivesController",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_onBehalfOf",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fomo",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_controller",
        type: "address",
      },
    ],
    name: "setController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_onBehalfOf",
        type: "address",
      },
    ],
    name: "unwrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620014c3380380620014c383398101604081905262000034916200011b565b6040518060400160405280600581526020016473464f4d4f60d81b8152506040518060400160405280600b81526020016a5374616b656420464f4d4f60a81b8152508160039081620000879190620001f4565b506004620000968282620001f4565b505050620000b3620000ad620000c560201b60201c565b620000c9565b6001600160a01b0316608052620002c0565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156200012e57600080fd5b81516001600160a01b03811681146200014657600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200017857607f821691505b6020821081036200019957634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001ef576000816000526020600020601f850160051c81016020861015620001ca5750805b601f850160051c820191505b81811015620001eb57828155600101620001d6565b5050505b505050565b81516001600160401b038111156200021057620002106200014d565b620002288162000221845462000163565b846200019f565b602080601f831160018114620002605760008415620002475750858301515b600019600386901b1c1916600185901b178555620001eb565b600085815260208120601f198616915b82811015620002915788860151825594840194600190910190840162000270565b5085821015620002b05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6080516111d9620002ea60003960008181610272015281816103cc01526104fc01526111d96000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80637647691d116100ad578063a9059cbb11610071578063a9059cbb1461025a578063d9fca70e1461026d578063dd62ed3e14610294578063f2fde38b146102a7578063f77c4791146102ba57600080fd5b80637647691d146101f45780638da5cb5b1461020757806392eefe9b1461022c57806395d89b411461023f578063a457c2d71461024757600080fd5b8063313ce567116100f4578063313ce5671461018c578063395093511461019b5780636e553f65146101ae57806370a08231146101c3578063715018a6146101ec57600080fd5b806306fdde0314610126578063095ea7b31461014457806318160ddd1461016757806323b872dd14610179575b600080fd5b61012e6102cd565b60405161013b9190610fdd565b60405180910390f35b61015761015236600461102c565b61035f565b604051901515815260200161013b565b6002545b60405190815260200161013b565b610157610187366004611056565b610379565b6040516012815260200161013b565b6101576101a936600461102c565b61039d565b6101c16101bc366004611092565b6103bf565b005b61016b6101d13660046110be565b6001600160a01b031660009081526020819052604090205490565b6101c1610474565b6101c1610202366004611092565b610488565b6005546001600160a01b03165b6040516001600160a01b03909116815260200161013b565b6101c161023a3660046110be565b610527565b61012e6105a0565b61015761025536600461102c565b6105af565b61015761026836600461102c565b61062a565b6102147f000000000000000000000000000000000000000000000000000000000000000081565b61016b6102a23660046110e0565b610638565b6101c16102b53660046110be565b610663565b600654610214906001600160a01b031681565b6060600380546102dc9061110a565b80601f01602080910402602001604051908101604052809291908181526020018280546103089061110a565b80156103555780601f1061032a57610100808354040283529160200191610355565b820191906000526020600020905b81548152906001019060200180831161033857829003601f168201915b5050505050905090565b60003361036d8185856106dc565b60019150505b92915050565b600033610387858285610801565b61039285858561087b565b506001949350505050565b60003361036d8185856103b08383610638565b6103ba9190611144565b6106dc565b6103f46001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333085610a1f565b60065461040a906001600160a01b031683610a8a565b600654604051636e553f6560e01b8152600481018490526001600160a01b03838116602483015290911690636e553f6590604401600060405180830381600087803b15801561045857600080fd5b505af115801561046c573d6000803e3d6000fd5b505050505050565b61047c610b49565b6104866000610ba3565b565b6006546001600160a01b031633146104d95760405162461bcd60e51b815260206004820152600f60248201526e27b7363c9021b7b73a3937b63632b960891b60448201526064015b60405180910390fd5b6006546104ef906001600160a01b031683610bf5565b6105236001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168284610d24565b5050565b61052f610b49565b6006546001600160a01b03161561057e5760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b60448201526064016104d0565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6060600480546102dc9061110a565b600033816105bd8286610638565b90508381101561061d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104d0565b61039282868684036106dc565b60003361036d81858561087b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61066b610b49565b6001600160a01b0381166106d05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104d0565b6106d981610ba3565b50565b6001600160a01b03831661073e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104d0565b6001600160a01b03821661079f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104d0565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600061080d8484610638565b9050600019811461087557818110156108685760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104d0565b61087584848484036106dc565b50505050565b6001600160a01b0383166108df5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104d0565b6001600160a01b0382166109415760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104d0565b6001600160a01b038316600090815260208190526040902054818110156109b95760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104d0565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610875565b6040516001600160a01b03808516602483015283166044820152606481018290526108759085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610d54565b6001600160a01b038216610ae05760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104d0565b8060026000828254610af29190611144565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6005546001600160a01b031633146104865760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104d0565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610c555760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104d0565b6001600160a01b03821660009081526020819052604090205481811015610cc95760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016104d0565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016107f4565b505050565b6040516001600160a01b038316602482015260448101829052610d1f90849063a9059cbb60e01b90606401610a53565b6000610da9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610e299092919063ffffffff16565b9050805160001480610dca575080806020019051810190610dca9190611165565b610d1f5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016104d0565b6060610e388484600085610e40565b949350505050565b606082471015610ea15760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016104d0565b600080866001600160a01b03168587604051610ebd9190611187565b60006040518083038185875af1925050503d8060008114610efa576040519150601f19603f3d011682016040523d82523d6000602084013e610eff565b606091505b5091509150610f1087838387610f1b565b979650505050505050565b60608315610f8a578251600003610f83576001600160a01b0385163b610f835760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104d0565b5081610e38565b610e388383815115610f9f5781518083602001fd5b8060405162461bcd60e51b81526004016104d09190610fdd565b60005b83811015610fd4578181015183820152602001610fbc565b50506000910152565b6020815260008251806020840152610ffc816040850160208701610fb9565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461102757600080fd5b919050565b6000806040838503121561103f57600080fd5b61104883611010565b946020939093013593505050565b60008060006060848603121561106b57600080fd5b61107484611010565b925061108260208501611010565b9150604084013590509250925092565b600080604083850312156110a557600080fd5b823591506110b560208401611010565b90509250929050565b6000602082840312156110d057600080fd5b6110d982611010565b9392505050565b600080604083850312156110f357600080fd5b6110fc83611010565b91506110b560208401611010565b600181811c9082168061111e57607f821691505b60208210810361113e57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561037357634e487b7160e01b600052601160045260246000fd5b60006020828403121561117757600080fd5b815180151581146110d957600080fd5b60008251611199818460208701610fb9565b919091019291505056fea2646970667358221220c2d6e23444137e3f675b9d02d8299614994099f494349baadb478c90a7a8a93564736f6c63430008170033";

type FomoProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FomoProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FomoProxy__factory extends ContractFactory {
  constructor(...args: FomoProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _fomo: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FomoProxy> {
    return super.deploy(_fomo, overrides || {}) as Promise<FomoProxy>;
  }
  override getDeployTransaction(
    _fomo: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_fomo, overrides || {});
  }
  override attach(address: string): FomoProxy {
    return super.attach(address) as FomoProxy;
  }
  override connect(signer: Signer): FomoProxy__factory {
    return super.connect(signer) as FomoProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FomoProxyInterface {
    return new utils.Interface(_abi) as FomoProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FomoProxy {
    return new Contract(address, _abi, signerOrProvider) as FomoProxy;
  }
}
