/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  AirdropSnapshotWallets,
  AirdropSnapshotWalletsInterface,
} from "../../contracts/AirdropSnapshotWallets";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_fomoTokenAddress",
        type: "address",
      },
      {
        internalType: "contract IIdentityVerifier",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "contract ITeamVesting",
        name: "_vesting",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_baseAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ArgumentIsAddressZero",
    type: "error",
  },
  {
    inputs: [],
    name: "ArgumentIsZero",
    type: "error",
  },
  {
    inputs: [],
    name: "VerificationFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_identity",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "TokensClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "baseAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "identity",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fomoToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "togglePause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IIdentityVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vesting",
    outputs: [
      {
        internalType: "contract ITeamVesting",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61010060405234801561001157600080fd5b50604051610e6b380380610e6b83398101604081905261003091610166565b610039336100fe565b6000805460ff60a01b191690556001600160a01b03841661006d5760405163f106f2bd60e01b815260040160405180910390fd5b6001600160a01b0383166100945760405163f106f2bd60e01b815260040160405180910390fd5b6001600160a01b0382166100bb5760405163f106f2bd60e01b815260040160405180910390fd5b806000036100dc5760405163821f9e4f60e01b815260040160405180910390fd5b6001600160a01b0393841660805291831660a05290911660c05260e0526101b9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461016357600080fd5b50565b6000806000806080858703121561017c57600080fd5b84516101878161014e565b60208601519094506101988161014e565b60408601519093506101a98161014e565b6060959095015193969295505050565b60805160a05160c05160e051610c576102146000396000818161016d0152610373015260008181610146015281816103a9015261047101526000818161010201526102cf01526000818160be01526103db0152610c576000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80635c975abb116100715780635c975abb1461019d578063715018a6146101ba5780638da5cb5b146101c25780638f0bc152146101d3578063c4ae3168146101e6578063f2fde38b146101ee57600080fd5b80630cb12b61146100b95780632b7ac3f3146100fd578063398d92bb146101245780633ccfd60b1461013957806344c63eec146101415780634864d14014610168575b600080fd5b6100e07f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e07f000000000000000000000000000000000000000000000000000000000000000081565b610137610132366004610a63565b610201565b005b610137610254565b6100e07f000000000000000000000000000000000000000000000000000000000000000081565b61018f7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016100f4565b600054600160a01b900460ff1660405190151581526020016100f4565b610137610299565b6000546001600160a01b03166100e0565b6101376101e1366004610a93565b6102ad565b61013761050e565b6101376101fc366004610b1c565b610538565b6102096105b3565b8160000361022a5760405163821f9e4f60e01b815260040160405180910390fd5b61025061023f6000546001600160a01b031690565b6001600160a01b038316908461060d565b5050565b61025c6105b3565b600080546040516001600160a01b03909116914780156108fc02929091818181858888f19350505050158015610296573d6000803e3d6000fd5b50565b6102a16105b3565b6102ab6000610664565b565b6102b56106b4565b6040516301bdd4c160e31b81526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690630deea6089061030c9088908890869089908990600401610b40565b6020604051808303816000875af115801561032b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034f9190610b8c565b90508061036f5760405163439cc0cd60e01b815260040160405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000060405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390529192507f00000000000000000000000000000000000000000000000000000000000000009091169063095ea7b3906044016020604051808303816000875af1158015610426573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044a9190610b8c565b5060405163df7bb46f60e01b8152600481018290526001600160a01b0387811660248301527f0000000000000000000000000000000000000000000000000000000000000000169063df7bb46f90604401600060405180830381600087803b1580156104b557600080fd5b505af11580156104c9573d6000803e3d6000fd5b50505050806000876001600160a01b03167f9923b4306c6c030f2bdfbf156517d5983b87e15b96176da122cd4f2effa4ba7b60405160405180910390a4505050505050565b6105166105b3565b600054600160a01b900460ff1615610530576102ab610701565b6102ab610756565b6105406105b3565b6001600160a01b0381166105aa5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61029681610664565b6000546001600160a01b031633146102ab5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105a1565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261065f908490610799565b505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600054600160a01b900460ff16156102ab5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016105a1565b61070961086e565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b61075e6106b4565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586107393390565b60006107ee826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166108be9092919063ffffffff16565b905080516000148061080f57508080602001905181019061080f9190610b8c565b61065f5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016105a1565b600054600160a01b900460ff166102ab5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016105a1565b60606108cd84846000856108d5565b949350505050565b6060824710156109365760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016105a1565b600080866001600160a01b031685876040516109529190610bd2565b60006040518083038185875af1925050503d806000811461098f576040519150601f19603f3d011682016040523d82523d6000602084013e610994565b606091505b50915091506109a5878383876109b0565b979650505050505050565b60608315610a1f578251600003610a18576001600160a01b0385163b610a185760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105a1565b50816108cd565b6108cd8383815115610a345781518083602001fd5b8060405162461bcd60e51b81526004016105a19190610bee565b6001600160a01b038116811461029657600080fd5b60008060408385031215610a7657600080fd5b823591506020830135610a8881610a4e565b809150509250929050565b60008060008060608587031215610aa957600080fd5b8435610ab481610a4e565b935060208501359250604085013567ffffffffffffffff80821115610ad857600080fd5b818701915087601f830112610aec57600080fd5b813581811115610afb57600080fd5b886020828501011115610b0d57600080fd5b95989497505060200194505050565b600060208284031215610b2e57600080fd5b8135610b3981610a4e565b9392505050565b60018060a01b038616815284602082015283604082015260806060820152816080820152818360a0830137600081830160a090810191909152601f909201601f19160101949350505050565b600060208284031215610b9e57600080fd5b81518015158114610b3957600080fd5b60005b83811015610bc9578181015183820152602001610bb1565b50506000910152565b60008251610be4818460208701610bae565b9190910192915050565b6020815260008251806020840152610c0d816040850160208701610bae565b601f01601f1916919091016040019291505056fea264697066735822122011932e5c5da0d4fb287619d42f04c75e4de545f75ab8d4423f135e19a0741ae064736f6c63430008170033";

type AirdropSnapshotWalletsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AirdropSnapshotWalletsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AirdropSnapshotWallets__factory extends ContractFactory {
  constructor(...args: AirdropSnapshotWalletsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _fomoTokenAddress: PromiseOrValue<string>,
    _verifier: PromiseOrValue<string>,
    _vesting: PromiseOrValue<string>,
    _baseAmount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AirdropSnapshotWallets> {
    return super.deploy(
      _fomoTokenAddress,
      _verifier,
      _vesting,
      _baseAmount,
      overrides || {}
    ) as Promise<AirdropSnapshotWallets>;
  }
  override getDeployTransaction(
    _fomoTokenAddress: PromiseOrValue<string>,
    _verifier: PromiseOrValue<string>,
    _vesting: PromiseOrValue<string>,
    _baseAmount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _fomoTokenAddress,
      _verifier,
      _vesting,
      _baseAmount,
      overrides || {}
    );
  }
  override attach(address: string): AirdropSnapshotWallets {
    return super.attach(address) as AirdropSnapshotWallets;
  }
  override connect(signer: Signer): AirdropSnapshotWallets__factory {
    return super.connect(signer) as AirdropSnapshotWallets__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AirdropSnapshotWalletsInterface {
    return new utils.Interface(_abi) as AirdropSnapshotWalletsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AirdropSnapshotWallets {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AirdropSnapshotWallets;
  }
}
