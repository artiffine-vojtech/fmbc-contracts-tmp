/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ERC721BatchEnumerable,
  ERC721BatchEnumerableInterface,
} from "../../contracts/ERC721BatchEnumerable";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200184638038062001846833981016040819052620000349162000122565b60006200004283826200021d565b5060016200005182826200021d565b505050620002e9565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008257600080fd5b81516001600160401b03808211156200009f576200009f6200005a565b604051601f8301601f19908116603f01168101908282118183101715620000ca57620000ca6200005a565b8160405283815260209250866020858801011115620000e857600080fd5b600091505b838210156200010c5785820183015181830184015290820190620000ed565b6000602085830101528094505050505092915050565b600080604083850312156200013657600080fd5b82516001600160401b03808211156200014e57600080fd5b6200015c8683870162000070565b935060208501519150808211156200017357600080fd5b50620001828582860162000070565b9150509250929050565b600181811c90821680620001a157607f821691505b602082108103620001c257634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000218576000816000526020600020601f850160051c81016020861015620001f35750805b601f850160051c820191505b818110156200021457828155600101620001ff565b5050505b505050565b81516001600160401b038111156200023957620002396200005a565b62000251816200024a84546200018c565b84620001c8565b602080601f831160018114620002895760008415620002705750858301515b600019600386901b1c1916600185901b17855562000214565b600085815260208120601f198616915b82811015620002ba5788860151825594840194600190910190840162000299565b5085821015620002d95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61154d80620002f96000396000f3fe608060405234801561001057600080fd5b50600436106100e05760003560e01c80634f6ccce7116100875780634f6ccce7146101ad5780636352211e146101c057806370a08231146101d357806395d89b41146101e6578063a22cb465146101ee578063b88d4fde14610201578063c87b56dd14610214578063e985e9c51461022757600080fd5b806301ffc9a7146100e557806306fdde031461010d578063081812fc14610122578063095ea7b31461014d57806318160ddd1461016257806323b872dd146101745780632f745c591461018757806342842e0e1461019a575b600080fd5b6100f86100f336600461105a565b61023a565b60405190151581526020015b60405180910390f35b6101156102a7565b60405161010491906110c7565b6101356101303660046110da565b610339565b6040516001600160a01b039091168152602001610104565b61016061015b36600461110f565b610360565b005b6008545b604051908152602001610104565b610160610182366004611139565b61047a565b61016661019536600461110f565b6104ab565b6101606101a8366004611139565b610541565b6101666101bb3660046110da565b61055c565b6101356101ce3660046110da565b6105ef565b6101666101e1366004611175565b610624565b6101156106aa565b6101606101fc366004611190565b6106b9565b61016061020f3660046111e2565b6106c8565b6101156102223660046110da565b610700565b6100f86102353660046112be565b610774565b60006001600160e01b031982166380ac58cd60e01b148061026b57506001600160e01b03198216635b5e139f60e01b145b8061028657506001600160e01b0319821663780e9d6360e01b145b806102a157506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102b6906112f1565b80601f01602080910402602001604051908101604052809291908181526020018280546102e2906112f1565b801561032f5780601f106103045761010080835404028352916020019161032f565b820191906000526020600020905b81548152906001019060200180831161031257829003601f168201915b5050505050905090565b6000610344826107a2565b506000908152600460205260409020546001600160a01b031690565b600061036b826105ef565b9050806001600160a01b0316836001600160a01b0316036103dd5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806103f957506103f98133610774565b61046b5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016103d4565b61047583836107d9565b505050565b6104843382610847565b6104a05760405162461bcd60e51b81526004016103d49061132b565b6104758383836108a6565b60006104b683610624565b82106105185760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b60648201526084016103d4565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b610475838383604051806020016040528060008152506106c8565b600061056760085490565b82106105ca5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016103d4565b600882815481106105dd576105dd611378565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806102a15760405162461bcd60e51b81526004016103d49061138e565b60006001600160a01b03821661068e5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016103d4565b506001600160a01b031660009081526003602052604090205490565b6060600180546102b6906112f1565b6106c4338383610a17565b5050565b6106d23383610847565b6106ee5760405162461bcd60e51b81526004016103d49061132b565b6106fa84848484610ae1565b50505050565b606061070b826107a2565b600061072260408051602081019091526000815290565b90506000815111610742576040518060200160405280600081525061076d565b8061074c84610b14565b60405160200161075d9291906113c0565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000818152600260205260409020546001600160a01b03166107d65760405162461bcd60e51b81526004016103d49061138e565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061080e826105ef565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610853836105ef565b9050806001600160a01b0316846001600160a01b0316148061087a575061087a8185610774565b8061089e5750836001600160a01b031661089384610339565b6001600160a01b0316145b949350505050565b826001600160a01b03166108b9826105ef565b6001600160a01b0316146108df5760405162461bcd60e51b81526004016103d4906113ef565b6001600160a01b0382166109415760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103d4565b61094e8383836001610ba7565b826001600160a01b0316610961826105ef565b6001600160a01b0316146109875760405162461bcd60e51b81526004016103d4906113ef565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031603610a745760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b60448201526064016103d4565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610aec8484846108a6565b610af884848484610cdb565b6106fa5760405162461bcd60e51b81526004016103d490611434565b60606000610b2183610ddc565b600101905060008167ffffffffffffffff811115610b4157610b416111cc565b6040519080825280601f01601f191660200182016040528015610b6b576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610b7557509392505050565b6001811115610c165760405162461bcd60e51b815260206004820152603560248201527f455243373231456e756d657261626c653a20636f6e7365637574697665207472604482015274185b9cd9995c9cc81b9bdd081cdd5c1c1bdc9d1959605a1b60648201526084016103d4565b816001600160a01b038516610c7257610c6d81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b610c95565b836001600160a01b0316856001600160a01b031614610c9557610c958582610eb4565b6001600160a01b038416610cb157610cac81610f51565b610cd4565b846001600160a01b0316846001600160a01b031614610cd457610cd48482611000565b5050505050565b60006001600160a01b0384163b15610dd157604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610d1f903390899088908890600401611486565b6020604051808303816000875af1925050508015610d5a575060408051601f3d908101601f19168201909252610d57918101906114c3565b60015b610db7573d808015610d88576040519150601f19603f3d011682016040523d82523d6000602084013e610d8d565b606091505b508051600003610daf5760405162461bcd60e51b81526004016103d490611434565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061089e565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610e1b5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610e47576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610e6557662386f26fc10000830492506010015b6305f5e1008310610e7d576305f5e100830492506008015b6127108310610e9157612710830492506004015b60648310610ea3576064830492506002015b600a83106102a15760010192915050565b60006001610ec184610624565b610ecb91906114e0565b600083815260076020526040902054909150808214610f1e576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090610f63906001906114e0565b60008381526009602052604081205460088054939450909284908110610f8b57610f8b611378565b906000526020600020015490508060088381548110610fac57610fac611378565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480610fe457610fe4611501565b6001900381819060005260206000200160009055905550505050565b600061100b83610624565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160e01b0319811681146107d657600080fd5b60006020828403121561106c57600080fd5b813561076d81611044565b60005b8381101561109257818101518382015260200161107a565b50506000910152565b600081518084526110b3816020860160208601611077565b601f01601f19169290920160200192915050565b60208152600061076d602083018461109b565b6000602082840312156110ec57600080fd5b5035919050565b80356001600160a01b038116811461110a57600080fd5b919050565b6000806040838503121561112257600080fd5b61112b836110f3565b946020939093013593505050565b60008060006060848603121561114e57600080fd5b611157846110f3565b9250611165602085016110f3565b9150604084013590509250925092565b60006020828403121561118757600080fd5b61076d826110f3565b600080604083850312156111a357600080fd5b6111ac836110f3565b9150602083013580151581146111c157600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156111f857600080fd5b611201856110f3565b935061120f602086016110f3565b925060408501359150606085013567ffffffffffffffff8082111561123357600080fd5b818701915087601f83011261124757600080fd5b813581811115611259576112596111cc565b604051601f8201601f19908116603f01168101908382118183101715611281576112816111cc565b816040528281528a602084870101111561129a57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156112d157600080fd5b6112da836110f3565b91506112e8602084016110f3565b90509250929050565b600181811c9082168061130557607f821691505b60208210810361132557634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b602080825260189082015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604082015260600190565b600083516113d2818460208801611077565b8351908301906113e6818360208801611077565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906114b99083018461109b565b9695505050505050565b6000602082840312156114d557600080fd5b815161076d81611044565b818103818111156102a157634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603160045260246000fdfea264697066735822122087af21e63a8c15ff2db17d7de0d41d3aa0b4df93db6ffc2670e30f968acfe20664736f6c63430008170033";

type ERC721BatchEnumerableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721BatchEnumerableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721BatchEnumerable__factory extends ContractFactory {
  constructor(...args: ERC721BatchEnumerableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721BatchEnumerable> {
    return super.deploy(
      name_,
      symbol_,
      overrides || {}
    ) as Promise<ERC721BatchEnumerable>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override attach(address: string): ERC721BatchEnumerable {
    return super.attach(address) as ERC721BatchEnumerable;
  }
  override connect(signer: Signer): ERC721BatchEnumerable__factory {
    return super.connect(signer) as ERC721BatchEnumerable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721BatchEnumerableInterface {
    return new utils.Interface(_abi) as ERC721BatchEnumerableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721BatchEnumerable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC721BatchEnumerable;
  }
}
