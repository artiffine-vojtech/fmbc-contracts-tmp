/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ERC721BatchEnumerable,
  ERC721BatchEnumerableInterface,
} from "../../contracts/ERC721BatchEnumerable";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620018a9380380620018a9833981016040819052620000349162000122565b60006200004283826200021d565b5060016200005182826200021d565b505050620002e9565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008257600080fd5b81516001600160401b03808211156200009f576200009f6200005a565b604051601f8301601f19908116603f01168101908282118183101715620000ca57620000ca6200005a565b8160405283815260209250866020858801011115620000e857600080fd5b600091505b838210156200010c5785820183015181830184015290820190620000ed565b6000602085830101528094505050505092915050565b600080604083850312156200013657600080fd5b82516001600160401b03808211156200014e57600080fd5b6200015c8683870162000070565b935060208501519150808211156200017357600080fd5b50620001828582860162000070565b9150509250929050565b600181811c90821680620001a157607f821691505b602082108103620001c257634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000218576000816000526020600020601f850160051c81016020861015620001f35750805b601f850160051c820191505b818110156200021457828155600101620001ff565b5050505b505050565b81516001600160401b038111156200023957620002396200005a565b62000251816200024a84546200018c565b84620001c8565b602080601f831160018114620002895760008415620002705750858301515b600019600386901b1c1916600185901b17855562000214565b600085815260208120601f198616915b82811015620002ba5788860151825594840194600190910190840162000299565b5085821015620002d95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6115b080620002f96000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80634f6ccce711610097578063a22cb46511610066578063a22cb4651461020e578063b88d4fde14610221578063c87b56dd14610234578063e985e9c51461024757600080fd5b80634f6ccce7146101cd5780636352211e146101e057806370a08231146101f357806395d89b411461020657600080fd5b806318160ddd116100d357806318160ddd1461018257806323b872dd146101945780632f745c59146101a757806342842e0e146101ba57600080fd5b806301ffc9a71461010557806306fdde031461012d578063081812fc14610142578063095ea7b31461016d575b600080fd5b6101186101133660046110ef565b610283565b60405190151581526020015b60405180910390f35b6101356102f0565b604051610124919061115c565b61015561015036600461116f565b610382565b6040516001600160a01b039091168152602001610124565b61018061017b3660046111a4565b6103a9565b005b6008545b604051908152602001610124565b6101806101a23660046111ce565b6104c3565b6101866101b53660046111a4565b6104f4565b6101806101c83660046111ce565b61058a565b6101866101db36600461116f565b6105a5565b6101556101ee36600461116f565b610638565b61018661020136600461120a565b610698565b61013561071e565b61018061021c366004611225565b61072d565b61018061022f366004611277565b61073c565b61013561024236600461116f565b610774565b610118610255366004611353565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b14806102b457506001600160e01b03198216635b5e139f60e01b145b806102cf57506001600160e01b0319821663780e9d6360e01b145b806102ea57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102ff90611386565b80601f016020809104026020016040519081016040528092919081815260200182805461032b90611386565b80156103785780601f1061034d57610100808354040283529160200191610378565b820191906000526020600020905b81548152906001019060200180831161035b57829003601f168201915b5050505050905090565b600061038d826107e8565b506000908152600460205260409020546001600160a01b031690565b60006103b482610638565b9050806001600160a01b0316836001600160a01b0316036104265760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061044257506104428133610255565b6104b45760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161041d565b6104be838361084a565b505050565b6104cd33826108b8565b6104e95760405162461bcd60e51b815260040161041d906113c0565b6104be838383610937565b60006104ff83610698565b82106105615760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b606482015260840161041d565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6104be8383836040518060200160405280600081525061073c565b60006105b060085490565b82106106135760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b606482015260840161041d565b600882815481106106265761062661140d565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806102ea5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161041d565b60006001600160a01b0382166107025760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161041d565b506001600160a01b031660009081526003602052604090205490565b6060600180546102ff90611386565b610738338383610aa8565b5050565b61074633836108b8565b6107625760405162461bcd60e51b815260040161041d906113c0565b61076e84848484610b76565b50505050565b606061077f826107e8565b600061079660408051602081019091526000815290565b905060008151116107b657604051806020016040528060008152506107e1565b806107c084610ba9565b6040516020016107d1929190611423565b6040516020818303038152906040525b9392505050565b6000818152600260205260409020546001600160a01b03166108475760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161041d565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061087f82610638565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000806108c483610638565b9050806001600160a01b0316846001600160a01b0316148061090b57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b8061092f5750836001600160a01b031661092484610382565b6001600160a01b0316145b949350505050565b826001600160a01b031661094a82610638565b6001600160a01b0316146109705760405162461bcd60e51b815260040161041d90611452565b6001600160a01b0382166109d25760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161041d565b6109df8383836001610c3c565b826001600160a01b03166109f282610638565b6001600160a01b031614610a185760405162461bcd60e51b815260040161041d90611452565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031603610b095760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161041d565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610b81848484610937565b610b8d84848484610d70565b61076e5760405162461bcd60e51b815260040161041d90611497565b60606000610bb683610e71565b600101905060008167ffffffffffffffff811115610bd657610bd6611261565b6040519080825280601f01601f191660200182016040528015610c00576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610c0a57509392505050565b6001811115610cab5760405162461bcd60e51b815260206004820152603560248201527f455243373231456e756d657261626c653a20636f6e7365637574697665207472604482015274185b9cd9995c9cc81b9bdd081cdd5c1c1bdc9d1959605a1b606482015260840161041d565b816001600160a01b038516610d0757610d0281600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b610d2a565b836001600160a01b0316856001600160a01b031614610d2a57610d2a8582610f49565b6001600160a01b038416610d4657610d4181610fe6565b610d69565b846001600160a01b0316846001600160a01b031614610d6957610d698482611095565b5050505050565b60006001600160a01b0384163b15610e6657604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610db49033908990889088906004016114e9565b6020604051808303816000875af1925050508015610def575060408051601f3d908101601f19168201909252610dec91810190611526565b60015b610e4c573d808015610e1d576040519150601f19603f3d011682016040523d82523d6000602084013e610e22565b606091505b508051600003610e445760405162461bcd60e51b815260040161041d90611497565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061092f565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610eb05772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610edc576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610efa57662386f26fc10000830492506010015b6305f5e1008310610f12576305f5e100830492506008015b6127108310610f2657612710830492506004015b60648310610f38576064830492506002015b600a83106102ea5760010192915050565b60006001610f5684610698565b610f609190611543565b600083815260076020526040902054909150808214610fb3576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090610ff890600190611543565b600083815260096020526040812054600880549394509092849081106110205761102061140d565b9060005260206000200154905080600883815481106110415761104161140d565b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548061107957611079611564565b6001900381819060005260206000200160009055905550505050565b60006110a083610698565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160e01b03198116811461084757600080fd5b60006020828403121561110157600080fd5b81356107e1816110d9565b60005b8381101561112757818101518382015260200161110f565b50506000910152565b6000815180845261114881602086016020860161110c565b601f01601f19169290920160200192915050565b6020815260006107e16020830184611130565b60006020828403121561118157600080fd5b5035919050565b80356001600160a01b038116811461119f57600080fd5b919050565b600080604083850312156111b757600080fd5b6111c083611188565b946020939093013593505050565b6000806000606084860312156111e357600080fd5b6111ec84611188565b92506111fa60208501611188565b9150604084013590509250925092565b60006020828403121561121c57600080fd5b6107e182611188565b6000806040838503121561123857600080fd5b61124183611188565b91506020830135801515811461125657600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561128d57600080fd5b61129685611188565b93506112a460208601611188565b925060408501359150606085013567ffffffffffffffff808211156112c857600080fd5b818701915087601f8301126112dc57600080fd5b8135818111156112ee576112ee611261565b604051601f8201601f19908116603f0116810190838211818310171561131657611316611261565b816040528281528a602084870101111561132f57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561136657600080fd5b61136f83611188565b915061137d60208401611188565b90509250929050565b600181811c9082168061139a57607f821691505b6020821081036113ba57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6000835161143581846020880161110c565b83519083019061144981836020880161110c565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061151c90830184611130565b9695505050505050565b60006020828403121561153857600080fd5b81516107e1816110d9565b818103818111156102ea57634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603160045260246000fdfea2646970667358221220b2ddf79e69856c03e0639e21f06accd2e8d7a3a36bed2a8043883d910592397b64736f6c63430008170033";

type ERC721BatchEnumerableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721BatchEnumerableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721BatchEnumerable__factory extends ContractFactory {
  constructor(...args: ERC721BatchEnumerableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721BatchEnumerable> {
    return super.deploy(
      name_,
      symbol_,
      overrides || {}
    ) as Promise<ERC721BatchEnumerable>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override attach(address: string): ERC721BatchEnumerable {
    return super.attach(address) as ERC721BatchEnumerable;
  }
  override connect(signer: Signer): ERC721BatchEnumerable__factory {
    return super.connect(signer) as ERC721BatchEnumerable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721BatchEnumerableInterface {
    return new utils.Interface(_abi) as ERC721BatchEnumerableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721BatchEnumerable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC721BatchEnumerable;
  }
}
