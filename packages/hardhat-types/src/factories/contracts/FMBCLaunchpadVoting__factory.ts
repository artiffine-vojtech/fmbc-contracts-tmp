/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  FMBCLaunchpadVoting,
  FMBCLaunchpadVotingInterface,
} from "../../contracts/FMBCLaunchpadVoting";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IIdentityVerifier",
        name: "_verifier",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "AdminAlreadyExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "AdminDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "AdminIsAddressZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "CallerIsNotTheAdmin",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "InvalidProposalId",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "InvalidTimestamp",
    type: "error",
  },
  {
    inputs: [],
    name: "LessThanTwoChoices",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "ProposalAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "UserHasNotVotedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "VerificationFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "VotingIsClosed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "VotingIsOpened",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "VotingNotStarted",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "choiceId",
        type: "uint256",
      },
    ],
    name: "WrongChoice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "AdminAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "AdminRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "choice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "Voted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "VotingClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "VotingOpened",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    name: "addAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
    ],
    name: "closeProposalsBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_proposalId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endTimestamp",
        type: "uint256",
      },
      {
        internalType: "string[]",
        name: "_choices",
        type: "string[]",
      },
    ],
    name: "createNewProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_proposalId",
        type: "uint256",
      },
    ],
    name: "getProposalInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "startTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTimestamp",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "open",
            type: "bool",
          },
          {
            internalType: "string[]",
            name: "choices",
            type: "string[]",
          },
          {
            internalType: "uint256[]",
            name: "votes",
            type: "uint256[]",
          },
        ],
        internalType: "struct FMBCLaunchpadVoting.ProposalInfo",
        name: "proposal",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_proposalId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getUserVote",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_proposalId",
        type: "uint256",
      },
    ],
    name: "getVotingResult",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "idToProposalInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "startTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTimestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "open",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    name: "isAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "openProposalsIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    name: "removeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_proposalId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_choice",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "submitVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IIdentityVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161185a38038061185a83398101604081905261002f91610099565b61003833610049565b6001600160a01b03166080526100c9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100ab57600080fd5b81516001600160a01b03811681146100c257600080fd5b9392505050565b60805161176f6100eb6000396000818161015301526107be015261176f6000f3fe608060405234801561001057600080fd5b50600436106100d55760003560e01c806366babdb91161008757806366babdb9146101a857806370480275146101c9578063715018a6146101dc5780638da5cb5b146101e4578063bc903cb8146101f5578063cb8357cd14610215578063f2fde38b14610228578063fe2099b01461023b57600080fd5b806303c7881a146100da5780631785f53c146101035780631c0d850e1461011857806324d7806c1461012b5780632b7ac3f31461014e578063563a106f1461018257806363af423414610195575b600080fd5b6100ed6100e83660046110b1565b61028a565b6040516100fa9190611123565b60405180910390f35b61011661011136600461113d565b6103df565b005b6100ed610126366004611158565b610492565b61013e61013936600461113d565b6105e1565b60405190151581526020016100fa565b6101757f000000000000000000000000000000000000000000000000000000000000000081565b6040516100fa9190611171565b610116610190366004611185565b610618565b6101166101a33660046111fa565b6106d6565b6101bb6101b6366004611158565b610916565b6040519081526020016100fa565b6101166101d736600461113d565b610937565b6101166109f1565b6000546001600160a01b0316610175565b610208610203366004611158565b610a05565b6040516100fa91906112c3565b6101166102233660046113b3565b610ba4565b61011661023636600461113d565b610d5b565b61026d610249366004611158565b60036020526000908152604090208054600182015460029092015490919060ff1683565b6040805193845260208401929092521515908201526060016100fa565b60008281526005602090815260408083206001600160a01b038516845290915290205460609060ff166102d057604051631b795af160e01b815260040160405180910390fd5b6000838152600360205260408120805490910361030857604051630d30dcf560e41b8152600481018590526024015b60405180910390fd5b60008481526004602090815260408083206001600160a01b038716845290915290205460038201805482908110610341576103416114e7565b906000526020600020018054610356906114fd565b80601f0160208091040260200160405190810160405280929190818152602001828054610382906114fd565b80156103cf5780601f106103a4576101008083540402835291602001916103cf565b820191906000526020600020905b8154815290600101906020018083116103b257829003601f168201915b5050505050925050505b92915050565b6103e7610dd4565b6001600160a01b03811661040e5760405163274338ef60e11b815260040160405180910390fd5b6001600160a01b03811660009081526001602052604090205460ff166104495780604051630ed580c760e41b81526004016102ff9190611171565b6001600160a01b038116600081815260016020526040808220805460ff19169055517fa3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f9190a250565b60008181526003602052604081208054606092036104c657604051630d30dcf560e41b8152600481018490526024016102ff565b6003810154600080805b8381101561052d57818560040182815481106104ee576104ee6114e7565b9060005260206000200154111561052557846004018181548110610514576105146114e7565b906000526020600020015491508092505b6001016104d0565b50836003018281548110610543576105436114e7565b906000526020600020018054610558906114fd565b80601f0160208091040260200160405190810160405280929190818152602001828054610584906114fd565b80156105d15780601f106105a6576101008083540402835291602001916105d1565b820191906000526020600020905b8154815290600101906020018083116105b457829003601f168201915b5050505050945050505050919050565b6001600160a01b03811660009081526001602052604081205460ff16806103d95750506000546001600160a01b0391821691161490565b61062133610e2e565b60005b818110156106d1576000838383818110610640576106406114e7565b6020908102929092013560008181526003909352604090922060028101549293509160ff1690506106875760405163dd16587f60e01b8152600481018390526024016102ff565b61069082610e85565b60028101805460ff1916905560405182907f8e9b46a70b3967bc9ea56ca61732c363a191fac88ae3ba011f4e030711c9011790600090a25050600101610624565b505050565b836000036106fa57604051630d30dcf560e41b8152600481018590526024016102ff565b6000848152600360205260409020600281015460ff166107305760405163dd16587f60e01b8152600481018690526024016102ff565b80544210156107555760405163bc2e28fb60e01b8152600481018690526024016102ff565b806001015442111561077d5760405163dd16587f60e01b8152600481018690526024016102ff565b600381015484106107a457604051630f270c3b60e21b8152600481018590526024016102ff565b6040516301bdd4c160e31b81526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690630deea608906107fb9033908b908b908a908a90600401611560565b6020604051808303816000875af115801561081a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083e9190611599565b90508061085e5760405163439cc0cd60e01b815260040160405180910390fd5b6001826004018681548110610875576108756114e7565b90600052602060002001600082825461088e91906115d1565b90915550506000868152600460209081526040808320338085529083528184208990558984526005835281842081855290925291829020805460ff191660011790559051869188917ffe0ccbc171a3a491a67a3ee5c2ba64c68d2a96b3ed3dd69be38bade0d14ebcd09061090590899089906115e4565b60405180910390a450505050505050565b6002818154811061092657600080fd5b600091825260209091200154905081565b61093f610dd4565b6001600160a01b0381166109665760405163274338ef60e11b815260040160405180910390fd5b6001600160a01b03811660009081526001602052604090205460ff16156109a2578060405163f646f2cd60e01b81526004016102ff9190611171565b6001600160a01b0381166000818152600160208190526040808320805460ff1916909217909155517f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e3399190a250565b6109f9610dd4565b610a036000610f3c565b565b610a396040518060a00160405280600081526020016000815260200160001515815260200160608152602001606081525090565b6000828152600360208181526040808420815160a08101835281548152600182015481850152600282015460ff16151581840152938101805483518186028101860190945280845291958694606087019493919084015b82821015610b3c578382906000526020600020018054610aaf906114fd565b80601f0160208091040260200160405190810160405280929190818152602001828054610adb906114fd565b8015610b285780601f10610afd57610100808354040283529160200191610b28565b820191906000526020600020905b815481529060010190602001808311610b0b57829003601f168201915b505050505081526020019060010190610a90565b50505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015610b9357602002820191906000526020600020905b815481526020019060010190808311610b7f575b505050505081525050915050919050565b610bad33610e2e565b600084815260036020526040812090859003610bdf57604051630d30dcf560e41b8152600481018690526024016102ff565b805415610c02576040516312dba68f60e01b8152600481018690526024016102ff565b42841015610c26576040516304b8410560e31b8152600481018590526024016102ff565b83831015610c4a576040516304b8410560e31b8152600481018490526024016102ff565b600282511015610c6d57604051632ab9be1960e11b815260040160405180910390fd5b60028101805460ff1916600190811790915584825581018390558151610c9c9060038301906020850190610f8c565b50815167ffffffffffffffff811115610cb757610cb761136c565b604051908082528060200260200182016040528015610ce0578160200160208202803683370190505b508051610cf7916004840191602090910190610fe2565b506002805460018101825560009182527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0186905560405186917fe0a358d4a766346f1ece85d22e2197435d610d9638874a0fd6746e58a1b1f58a91a25050505050565b610d63610dd4565b6001600160a01b038116610dc85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102ff565b610dd181610f3c565b50565b6000546001600160a01b03163314610a035760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102ff565b6001600160a01b03811660009081526001602052604090205460ff16158015610e6557506000546001600160a01b03828116911614155b15610dd15780604051636d3f049f60e01b81526004016102ff9190611171565b6002546000805b82811015610ec8578360028281548110610ea857610ea86114e7565b906000526020600020015403610ec057809150610ec8565b600101610e8c565b506002610ed6600184611600565b81548110610ee657610ee66114e7565b906000526020600020015460028281548110610f0457610f046114e7565b6000918252602090912001556002805480610f2157610f21611613565b60019003818190600052602060002001600090559055505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215610fd2579160200282015b82811115610fd25782518290610fc29082611679565b5091602001919060010190610fac565b50610fde929150611029565b5090565b82805482825590600052602060002090810192821561101d579160200282015b8281111561101d578251825591602001919060010190611002565b50610fde929150611046565b80821115610fde57600061103d828261105b565b50600101611029565b5b80821115610fde5760008155600101611047565b508054611067906114fd565b6000825580601f10611077575050565b601f016020900490600052602060002090810190610dd19190611046565b80356001600160a01b03811681146110ac57600080fd5b919050565b600080604083850312156110c457600080fd5b823591506110d460208401611095565b90509250929050565b6000815180845260005b81811015611103576020818501810151868301820152016110e7565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061113660208301846110dd565b9392505050565b60006020828403121561114f57600080fd5b61113682611095565b60006020828403121561116a57600080fd5b5035919050565b6001600160a01b0391909116815260200190565b6000806020838503121561119857600080fd5b823567ffffffffffffffff808211156111b057600080fd5b818501915085601f8301126111c457600080fd5b8135818111156111d357600080fd5b8660208260051b85010111156111e857600080fd5b60209290920196919550909350505050565b60008060008060006080868803121561121257600080fd5b853594506020860135935060408601359250606086013567ffffffffffffffff8082111561123f57600080fd5b818801915088601f83011261125357600080fd5b81358181111561126257600080fd5b89602082850101111561127457600080fd5b9699959850939650602001949392505050565b60008151808452602080850194506020840160005b838110156112b85781518752958201959082019060010161129c565b509495945050505050565b6000602080835260c08301845182850152818501516040850152604085015115156060850152606085015160a0608086015281815180845260e08701915060e08160051b8801019350848301925060005b818110156113425760df198886030183526113308585516110dd565b94509285019291850191600101611314565b505050506080850151848203601f190160a086015291506113638183611287565b95945050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156113ab576113ab61136c565b604052919050565b600080600080608085870312156113c957600080fd5b84359350602080860135935060408601359250606086013567ffffffffffffffff808211156113f757600080fd5b818801915088601f83011261140b57600080fd5b81358181111561141d5761141d61136c565b8060051b61142c858201611382565b918252838101850191858101908c84111561144657600080fd5b86860192505b838310156114d6578235858111156114645760008081fd5b8601603f81018e136114765760008081fd5b878101358681111561148a5761148a61136c565b61149c601f8201601f19168a01611382565b8181528f60408385010111156114b25760008081fd5b81604084018b83013760009181018a0191909152835250918601919086019061144c565b999c989b5096995050505050505050565b634e487b7160e01b600052603260045260246000fd5b600181811c9082168061151157607f821691505b60208210810361153157634e487b7160e01b600052602260045260246000fd5b50919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60018060a01b038616815284602082015283604082015260806060820152600061158e608083018486611537565b979650505050505050565b6000602082840312156115ab57600080fd5b8151801515811461113657600080fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156103d9576103d96115bb565b6020815260006115f8602083018486611537565b949350505050565b818103818111156103d9576103d96115bb565b634e487b7160e01b600052603160045260246000fd5b601f8211156106d1576000816000526020600020601f850160051c810160208610156116525750805b601f850160051c820191505b818110156116715782815560010161165e565b505050505050565b815167ffffffffffffffff8111156116935761169361136c565b6116a7816116a184546114fd565b84611629565b602080601f8311600181146116dc57600084156116c45750858301515b600019600386901b1c1916600185901b178555611671565b600085815260208120601f198616915b8281101561170b578886015182559484019460019091019084016116ec565b50858210156117295787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212207a0286b639733cdd511ca293e3faad55ac5bcb6dd92a1aa369c681585cf5e58464736f6c63430008170033";

type FMBCLaunchpadVotingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FMBCLaunchpadVotingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FMBCLaunchpadVoting__factory extends ContractFactory {
  constructor(...args: FMBCLaunchpadVotingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _verifier: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FMBCLaunchpadVoting> {
    return super.deploy(
      _verifier,
      overrides || {}
    ) as Promise<FMBCLaunchpadVoting>;
  }
  override getDeployTransaction(
    _verifier: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_verifier, overrides || {});
  }
  override attach(address: string): FMBCLaunchpadVoting {
    return super.attach(address) as FMBCLaunchpadVoting;
  }
  override connect(signer: Signer): FMBCLaunchpadVoting__factory {
    return super.connect(signer) as FMBCLaunchpadVoting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FMBCLaunchpadVotingInterface {
    return new utils.Interface(_abi) as FMBCLaunchpadVotingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FMBCLaunchpadVoting {
    return new Contract(address, _abi, signerOrProvider) as FMBCLaunchpadVoting;
  }
}
