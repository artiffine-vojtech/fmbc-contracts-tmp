/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  BalancerDexProvider,
  BalancerDexProviderInterface,
} from "../../../../contracts/launchpad/providers/BalancerDexProvider";

const _abi = [
  {
    inputs: [],
    name: "FACTORY",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VAULT",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pair",
        type: "address",
      },
    ],
    name: "breakLP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountB",
        type: "uint256",
      },
    ],
    name: "createLP",
    outputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "getPoolBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastPoolId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506114d7806100206000396000f3fe608060405234801561001057600080fd5b506004361061006d5760003560e01c80632dd31000146100725780632fd49abe146100a3578063411557d1146100b6578063a657e579146100d1578063c9b72ce5146100e8578063e2fa36b514610110578063fb8ef43014610123575b600080fd5b61008d734c32a8a8fda4e24139b51b456b42290f51d6a1c481565b60405161009a9190610f2a565b60405180910390f35b60005461008d906001600160a01b031681565b61008d73ba12222222228d8ba445958a75a0704d566bf2c881565b6100da60015481565b60405190815260200161009a565b6100fb6100f6366004610f56565b610136565b6040805192835260208301919091520161009a565b6100da61011e366004610f7a565b610550565b61008d610131366004610fb3565b6106ba565b600080600073ba12222222228d8ba445958a75a0704d566bf2c86001600160a01b031663f94d4668856001600160a01b03166338fff2d06040518163ffffffff1660e01b8152600401602060405180830381865afa15801561019c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c09190610ff9565b6040518263ffffffff1660e01b81526004016101de91815260200190565b600060405180830381865afa1580156101fb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261022391908101906110ec565b5050905060006001856001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016102579190610f2a565b602060405180830381865afa158015610274573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102989190610ff9565b6040805160ff909316602084015282015260600160408051808303601f1901815260808301909152915060009080848152604080516002808252606082019092526020909201919081602001602082028036833701905050815260200183815260200160001515815250905073ba12222222228d8ba445958a75a0704d566bf2c86001600160a01b0316638bdb3913876001600160a01b03166338fff2d06040518163ffffffff1660e01b8152600401602060405180830381865afa158015610365573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103899190610ff9565b3030856040518563ffffffff1660e01b81526004016103ab94939291906112df565b600060405180830381600087803b1580156103c557600080fd5b505af11580156103d9573d6000803e3d6000fd5b505050506000836000815181106103f2576103f261131b565b60200260200101516001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016104259190610f2a565b602060405180830381865afa158015610442573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104669190610ff9565b905060008460018151811061047d5761047d61131b565b60200260200101516001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016104b09190610f2a565b602060405180830381865afa1580156104cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f19190610ff9565b905061052b33838760008151811061050b5761050b61131b565b60200260200101516001600160a01b0316610b439092919063ffffffff16565b61054333828760018151811061050b5761050b61131b565b9097909650945050505050565b600080600073ba12222222228d8ba445958a75a0704d566bf2c86001600160a01b031663f94d4668866001600160a01b03166338fff2d06040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105da9190610ff9565b6040518263ffffffff1660e01b81526004016105f891815260200190565b600060405180830381865afa158015610615573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261063d91908101906110ec565b509150915060005b82518110156106ac57846001600160a01b031683828151811061066a5761066a61131b565b60200260200101516001600160a01b0316036106a4578181815181106106925761069261131b565b602002602001015193505050506106b4565b600101610645565b506000925050505b92915050565b60408051600280825260608201835260009283929190602083019080368337019050509050846001600160a01b0316866001600160a01b0316106106fe5784610700565b855b816000815181106107135761071361131b565b6001600160a01b0392831660209182029290920101528581169087161061073a578561073c565b845b8160018151811061074f5761074f61131b565b6001600160a01b0392909216602092830291909101820152604080516002808252606082018352600093919290918301908036833701905050905060008160008151811061079f5761079f61131b565b60200260200101906001600160a01b031690816001600160a01b0316815250506000816001815181106107d4576107d461131b565b6001600160a01b039290921660209283029190910182015260408051600280825260608201835260009391929091830190803683370190505090506706f05b59d3b200008160008151811061082b5761082b61131b565b6020026020010181815250506706f05b59d3b20000816001815181106108535761085361131b565b60209081029190910101526040516310c1647f60e11b8152734c32a8a8fda4e24139b51b456b42290f51d6a1c490632182c8fe906108a790869085908790660aa87bee53800090309060009060040161136b565b6020604051808303816000875af11580156108c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ea9190611417565b9350866001600160a01b0316836000815181106109095761090961131b565b60200260200101516001600160a01b0316146109255785610927565b845b8160008151811061093a5761093a61131b565b602002602001018181525050866001600160a01b0316836001815181106109635761096361131b565b60200260200101516001600160a01b03161461097f5785610981565b845b816001815181106109945761099461131b565b602002602001018181525050600080826040516020016109b5929190611434565b60408051601f1981840301815291905290506109ef6001600160a01b038a1673ba12222222228d8ba445958a75a0704d566bf2c889610bab565b610a176001600160a01b03891673ba12222222228d8ba445958a75a0704d566bf2c888610bab565b60006040518060800160405280610a2b8790565b8152602001848152602001838152602001600015158152509050856001600160a01b03166338fff2d06040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa79190610ff9565b600181905560405163172b958560e31b815273ba12222222228d8ba445958a75a0704d566bf2c89163b95cac2891610ae891903090339087906004016112df565b600060405180830381600087803b158015610b0257600080fd5b505af1158015610b16573d6000803e3d6000fd5b5050600080546001600160a01b0319166001600160a01b038a1617905550959a9950505050505050505050565b6040516001600160a01b038316602482015260448101829052610ba690849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610cc5565b505050565b801580610c255750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015610bff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c239190610ff9565b155b610c955760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084015b60405180910390fd5b6040516001600160a01b038316602482015260448101829052610ba690849063095ea7b360e01b90606401610b6f565b6000610d1a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610d9a9092919063ffffffff16565b9050805160001480610d3b575080806020019051810190610d3b9190611450565b610ba65760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610c8c565b6060610da98484600085610db1565b949350505050565b606082471015610e125760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610c8c565b600080866001600160a01b03168587604051610e2e9190611472565b60006040518083038185875af1925050503d8060008114610e6b576040519150601f19603f3d011682016040523d82523d6000602084013e610e70565b606091505b5091509150610e8187838387610e8c565b979650505050505050565b60608315610efb578251600003610ef4576001600160a01b0385163b610ef45760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610c8c565b5081610da9565b610da98383815115610f105781518083602001fd5b8060405162461bcd60e51b8152600401610c8c919061148e565b6001600160a01b0391909116815260200190565b6001600160a01b0381168114610f5357600080fd5b50565b600060208284031215610f6857600080fd5b8135610f7381610f3e565b9392505050565b60008060408385031215610f8d57600080fd5b8235610f9881610f3e565b91506020830135610fa881610f3e565b809150509250929050565b60008060008060808587031215610fc957600080fd5b8435610fd481610f3e565b93506020850135610fe481610f3e565b93969395505050506040820135916060013590565b60006020828403121561100b57600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561105157611051611012565b604052919050565b600067ffffffffffffffff82111561107357611073611012565b5060051b60200190565b600082601f83011261108e57600080fd5b815160206110a361109e83611059565b611028565b8083825260208201915060208460051b8701019350868411156110c557600080fd5b602086015b848110156110e157805183529183019183016110ca565b509695505050505050565b60008060006060848603121561110157600080fd5b835167ffffffffffffffff8082111561111957600080fd5b818601915086601f83011261112d57600080fd5b8151602061113d61109e83611059565b82815260059290921b8401810191818101908a84111561115c57600080fd5b948201945b8386101561118357855161117481610f3e565b82529482019490820190611161565b9189015191975090935050508082111561119c57600080fd5b506111a98682870161107d565b925050604084015190509250925092565b60008151808452602080850194506020840160005b838110156111eb578151875295820195908201906001016111cf565b509495945050505050565b60005b838110156112115781810151838201526020016111f9565b50506000910152565b600081518084526112328160208601602086016111f6565b601f01601f19169290920160200192915050565b8051608080845281519084018190526000916020919082019060a0860190845b8181101561128b5783516001600160a01b031683529284019291840191600101611266565b50506020850151925085810360208701526112a681846111ba565b92505050604083015184820360408601526112c1828261121a565b91505060608301516112d7606086018215159052565b509392505050565b8481526001600160a01b0384811660208301528316604082015260806060820181905260009061131190830184611246565b9695505050505050565b634e487b7160e01b600052603260045260246000fd5b60008151808452602080850194506020840160005b838110156111eb5781516001600160a01b031687529582019590820190600101611346565b6000610100808352600a81840152506926a2a6a290262830b9b360b11b610120830152610140806020840152600a81840152506926a2a6a296a62830b9b360b11b6101608301526101808060408401526113c78184018a611331565b905082810360608401526113db81896111ba565b905082810360808401526113ef8188611331565b60a084019690965250506001600160a01b039290921660c083015260e0909101529392505050565b60006020828403121561142957600080fd5b8151610f7381610f3e565b60ff83168152604060208201526000610da960408301846111ba565b60006020828403121561146257600080fd5b81518015158114610f7357600080fd5b600082516114848184602087016111f6565b9190910192915050565b602081526000610f73602083018461121a56fea264697066735822122008f6da4fb895348116c6242fe0a9a63f7e94094b6792bd0778a5d1a9941dea0c64736f6c63430008170033";

type BalancerDexProviderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BalancerDexProviderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BalancerDexProvider__factory extends ContractFactory {
  constructor(...args: BalancerDexProviderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BalancerDexProvider> {
    return super.deploy(overrides || {}) as Promise<BalancerDexProvider>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BalancerDexProvider {
    return super.attach(address) as BalancerDexProvider;
  }
  override connect(signer: Signer): BalancerDexProvider__factory {
    return super.connect(signer) as BalancerDexProvider__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BalancerDexProviderInterface {
    return new utils.Interface(_abi) as BalancerDexProviderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BalancerDexProvider {
    return new Contract(address, _abi, signerOrProvider) as BalancerDexProvider;
  }
}
