/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MEMEVesting,
  MEMEVestingInterface,
} from "../../../contracts/launchpad/MEMEVesting";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tgeTimestamp",
        type: "uint256",
      },
      {
        internalType: "contract IERC20",
        name: "_memeTokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AmountExceedsAllocation",
    type: "error",
  },
  {
    inputs: [],
    name: "AmountTooSmall",
    type: "error",
  },
  {
    inputs: [],
    name: "ArgumentIsAddressZero",
    type: "error",
  },
  {
    inputs: [],
    name: "ArgumentIsZero",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectEtherValueSent",
    type: "error",
  },
  {
    inputs: [],
    name: "TgeTimestampInPast",
    type: "error",
  },
  {
    inputs: [],
    name: "TokensNotUnlocked",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTokenIdOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_buyer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "positionIndex",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "TokensClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_buyer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "positionIndex",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "TokensVested",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_positionIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "availableToClaim",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "cancelVesting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_positionIndexes",
        type: "uint256[]",
      },
    ],
    name: "claimTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "getVestingPositions",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountClaimed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startTimestamp",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "cancelled",
            type: "bool",
          },
        ],
        internalType: "struct IMEMEVesting.VestingPosition[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_positionIndex",
        type: "uint256",
      },
    ],
    name: "getVestingSchedule",
    outputs: [
      {
        internalType: "uint256[7]",
        name: "timestamps",
        type: "uint256[7]",
      },
      {
        internalType: "uint256[7]",
        name: "amounts",
        type: "uint256[7]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "memeToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tgeTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "vestTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "vestingPositions",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountClaimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTimestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "cancelled",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b5060405161142938038061142983398101604081905261002f916100e4565b61003833610094565b4282101561005957604051636592dc0f60e11b815260040160405180910390fd5b6001600160a01b0381166100805760405163f106f2bd60e01b815260040160405180910390fd5b6001600160a01b031660a052608052610121565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080604083850312156100f757600080fd5b825160208401519092506001600160a01b038116811461011657600080fd5b809150509250929050565b60805160a0516112ab61017e6000396000818161015d01528181610376015281816104a5015281816108f60152610a1d015260008181610184015281816103ba015281816105e10152818161094601526109cb01526112ab6000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063972598e711610071578063972598e714610158578063a4317ef41461017f578063a7931397146101a6578063bed9757e146101db578063df7bb46f146101fc578063f2fde38b1461020f57600080fd5b80632845e27d146100b95780632d08265a146100ce578063410b3fb9146100e1578063715018a61461010a5780637dfc78b5146101125780638da5cb5b14610133575b600080fd5b6100cc6100c7366004610f91565b610222565b005b6100cc6100dc366004610fac565b6103ac565b6100f46100ef366004610f91565b61052d565b6040516101019190611021565b60405180910390f35b6100cc6105c9565b610125610120366004611087565b6105dd565b604051908152602001610101565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610101565b6101407f000000000000000000000000000000000000000000000000000000000000000081565b6101257f000000000000000000000000000000000000000000000000000000000000000081565b6101b96101b43660046110ba565b6106ee565b6040805194855260208501939093529183015215156060820152608001610101565b6101ee6101e93660046110ba565b610737565b604051610101929190611107565b6100cc61020a366004611123565b6108c8565b6100cc61021d366004610f91565b610b2f565b61022a610bad565b6001600160a01b0381166000908152600160205260408120905b81548110156103a75781818154811061025f5761025f61114f565b600091825260209091206003600490920201015460ff1661039f57600182828154811061028e5761028e61114f565b906000526020600020906004020160030160006101000a81548160ff02191690831515021790555060008282815481106102ca576102ca61114f565b9060005260206000209060040201600101548383815481106102ee576102ee61114f565b90600052602060002090600402016000015461030a919061117b565b905082828154811061031e5761031e61114f565b9060005260206000209060040201600001548383815481106103425761034261114f565b90600052602060002090600402016001018190555061039d61036c6000546001600160a01b031690565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169083610c07565b505b600101610244565b505050565b8060005b81811015610527577f00000000000000000000000000000000000000000000000000000000000000004210156103f95760405163f3bc357f60e01b815260040160405180910390fd5b33600090815260016020526040812085858481811061041a5761041a61114f565b90506020020135815481106104315761043161114f565b60009182526020909120600490910201600381015490915060ff1615610457575061051f565b600061047c3387878681811061046f5761046f61114f565b90506020020135426105dd565b9050808260010160008282546104929190611194565b909155506104cc90506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383610c07565b808686858181106104df576104df61114f565b90506020020135336001600160a01b03167f9923b4306c6c030f2bdfbf156517d5983b87e15b96176da122cd4f2effa4ba7b60405160405180910390a450505b6001016103b0565b50505050565b6001600160a01b0381166000908152600160209081526040808320805482518185028101850190935280835260609492939192909184015b828210156105be576000848152602090819020604080516080810182526004860290920180548352600180820154848601526002820154928401929092526003015460ff16151560608301529083529092019101610565565b505050509050919050565b6105d1610bad565b6105db6000610c6a565b565b60007f000000000000000000000000000000000000000000000000000000000000000082101561060f575060006106e7565b6001600160a01b03841660009081526001602052604081208054859081106106395761063961114f565b60009182526020909120600490910201600381015490915060ff16156106635760009150506106e7565b6000816002015484610675919061117b565b9050600061068662278d00836111a7565b9050600060068210156106c8576127106106a2610682846111c9565b6106ad906000611194565b85546106b991906111c9565b6106c391906111a7565b6106cb565b83545b905060008460010154826106df919061117b565b955050505050505b9392505050565b6001602052816000526040600020818154811061070a57600080fd5b60009182526020909120600490910201805460018201546002830154600390930154919450925060ff1684565b61073f610f57565b610747610f57565b6001600160a01b03841660009081526001602052604081208054859081106107715761077161114f565b90600052602060002090600402019050600081600201548460006007811061079b5761079b61114f565b60200201528154612710906107b2906000906111c9565b6107bc91906111a7565b835260015b6107cd60066001611194565b8110156108be57836107e060018361117b565b600781106107f0576107f061114f565b60200201516107ff9083611194565b91508461080d60018361117b565b6007811061081d5761081d61114f565b602002015161082f9062278d00611194565b8582600781106108415761084161114f565b60200201526000612710610857610682846111c9565b610862906000611194565b855461086e91906111c9565b61087891906111a7565b9050600682146108915761088c838261117b565b61089e565b835461089e90849061117b565b8583600781106108b0576108b061114f565b6020020152506001016107c1565b5050509250929050565b816000036108e95760405163821f9e4f60e01b815260040160405180910390fd5b61091e6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333085610cba565b6001600160a01b038116600090815260016020819052604090912054908114801561096857507f000000000000000000000000000000000000000000000000000000000000000042105b156109c9576001600160a01b0382166000908152600160205260408120805482906109955761099561114f565b90600052602060002090600402019050838160000160008282546109b99190611194565b9091555060009250610af2915050565b7f00000000000000000000000000000000000000000000000000000000000000006000428211610a7d57429150612710610a046000876111c9565b610a0e91906111a7565b9050610a446001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168583610c07565b8083856001600160a01b03167f9923b4306c6c030f2bdfbf156517d5983b87e15b96176da122cd4f2effa4ba7b60405160405180910390a45b6001600160a01b038416600090815260016020818152604080842081516080810183528a8152808401968752918201968752606082018581528154808601835591865292909420905160049094020192835592519082015591516002830155516003909101805460ff19169115159190911790555b8281836001600160a01b03167fe37037c1b3b5a7099de9b4ff0b386af195061ad990fcf5c0c5f84b95d328f76660405160405180910390a4505050565b610b37610bad565b6001600160a01b038116610ba15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b610baa81610c6a565b50565b6000546001600160a01b031633146105db5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b98565b6040516001600160a01b0383166024820152604481018290526103a790849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610cf2565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b03808516602483015283166044820152606481018290526105279085906323b872dd60e01b90608401610c33565b6000610d47826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610dc79092919063ffffffff16565b9050805160001480610d68575080806020019051810190610d6891906111e0565b6103a75760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610b98565b6060610dd68484600085610dde565b949350505050565b606082471015610e3f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610b98565b600080866001600160a01b03168587604051610e5b9190611226565b60006040518083038185875af1925050503d8060008114610e98576040519150601f19603f3d011682016040523d82523d6000602084013e610e9d565b606091505b5091509150610eae87838387610eb9565b979650505050505050565b60608315610f28578251600003610f21576001600160a01b0385163b610f215760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610b98565b5081610dd6565b610dd68383815115610f3d5781518083602001fd5b8060405162461bcd60e51b8152600401610b989190611242565b6040518060e001604052806007906020820280368337509192915050565b80356001600160a01b0381168114610f8c57600080fd5b919050565b600060208284031215610fa357600080fd5b6106e782610f75565b60008060208385031215610fbf57600080fd5b823567ffffffffffffffff80821115610fd757600080fd5b818501915085601f830112610feb57600080fd5b813581811115610ffa57600080fd5b8660208260051b850101111561100f57600080fd5b60209290920196919550909350505050565b602080825282518282018190526000919060409081850190868401855b8281101561107a57815180518552868101518786015285810151868601526060908101511515908501526080909301929085019060010161103e565b5091979650505050505050565b60008060006060848603121561109c57600080fd5b6110a584610f75565b95602085013595506040909401359392505050565b600080604083850312156110cd57600080fd5b6110d683610f75565b946020939093013593505050565b8060005b60078110156105275781518452602093840193909101906001016110e8565b6101c0810161111682856110e4565b6106e760e08301846110e4565b6000806040838503121561113657600080fd5b8235915061114660208401610f75565b90509250929050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8181038181111561118e5761118e611165565b92915050565b8082018082111561118e5761118e611165565b6000826111c457634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761118e5761118e611165565b6000602082840312156111f257600080fd5b815180151581146106e757600080fd5b60005b8381101561121d578181015183820152602001611205565b50506000910152565b60008251611238818460208701611202565b9190910192915050565b6020815260008251806020840152611261816040850160208701611202565b601f01601f1916919091016040019291505056fea26469706673582212200b4753ade2fd506204de4028f86bad2b6de66ef9d6d36b00cd4d2a7976e5c8cc64736f6c63430008170033";

type MEMEVestingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MEMEVestingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MEMEVesting__factory extends ContractFactory {
  constructor(...args: MEMEVestingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _tgeTimestamp: PromiseOrValue<BigNumberish>,
    _memeTokenAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MEMEVesting> {
    return super.deploy(
      _tgeTimestamp,
      _memeTokenAddress,
      overrides || {}
    ) as Promise<MEMEVesting>;
  }
  override getDeployTransaction(
    _tgeTimestamp: PromiseOrValue<BigNumberish>,
    _memeTokenAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _tgeTimestamp,
      _memeTokenAddress,
      overrides || {}
    );
  }
  override attach(address: string): MEMEVesting {
    return super.attach(address) as MEMEVesting;
  }
  override connect(signer: Signer): MEMEVesting__factory {
    return super.connect(signer) as MEMEVesting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MEMEVestingInterface {
    return new utils.Interface(_abi) as MEMEVestingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MEMEVesting {
    return new Contract(address, _abi, signerOrProvider) as MEMEVesting;
  }
}
