/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  FMBCVesting,
  FMBCVestingInterface,
} from "../../contracts/FMBCVesting";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tgeTimestamp",
        type: "uint256",
      },
      {
        internalType: "contract IERC20",
        name: "_fmbcTokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AmountExceedsAllocation",
    type: "error",
  },
  {
    inputs: [],
    name: "AmountTooSmall",
    type: "error",
  },
  {
    inputs: [],
    name: "ArgumentIsAddressZero",
    type: "error",
  },
  {
    inputs: [],
    name: "ArgumentIsZero",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectEtherValueSent",
    type: "error",
  },
  {
    inputs: [],
    name: "TgeTimestampInPast",
    type: "error",
  },
  {
    inputs: [],
    name: "TokensNotUnlocked",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongTokenIdOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_buyer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "positionIndex",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "TokensClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_buyer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "positionIndex",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "TokensVested",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_positionIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "availableToClaim",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_positionIndexes",
        type: "uint256[]",
      },
    ],
    name: "claimTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fmbcToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "getVestingPositions",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountClaimed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startTimestamp",
            type: "uint256",
          },
        ],
        internalType: "struct IVesting.VestingPosition[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_positionIndex",
        type: "uint256",
      },
    ],
    name: "getVestingSchedule",
    outputs: [
      {
        internalType: "uint256[7]",
        name: "timestamps",
        type: "uint256[7]",
      },
      {
        internalType: "uint256[7]",
        name: "amounts",
        type: "uint256[7]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tgeTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "vestTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "vestingPositions",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountClaimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTimestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b5060405161121838038061121883398101604081905261002f916100e4565b61003833610094565b4282101561005957604051636592dc0f60e11b815260040160405180910390fd5b6001600160a01b0381166100805760405163f106f2bd60e01b815260040160405180910390fd5b6001600160a01b031660a052608052610121565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080604083850312156100f757600080fd5b825160208401519092506001600160a01b038116811461011657600080fd5b809150509250929050565b60805160a0516110a161017760003960008181610194015281816102e001528181610709015261083101526000818161013f0152818161020b015281816104120152818161075901526107de01526110a16000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063a4317ef411610071578063a4317ef41461013a578063a793139714610161578063abe1f37d1461018f578063bed9757e146101b6578063df7bb46f146101d7578063f2fde38b146101ea57600080fd5b80632d08265a146100ae578063410b3fb9146100c3578063715018a6146100ec5780637dfc78b5146100f45780638da5cb5b14610115575b600080fd5b6100c16100bc366004610d78565b6101fd565b005b6100d66100d1366004610e09565b610367565b6040516100e39190610e24565b60405180910390f35b6100c16103fa565b610107610102366004610e7d565b61040e565b6040519081526020016100e3565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100e3565b6101077f000000000000000000000000000000000000000000000000000000000000000081565b61017461016f366004610eb0565b610506565b604080519384526020840192909252908201526060016100e3565b6101227f000000000000000000000000000000000000000000000000000000000000000081565b6101c96101c4366004610eb0565b610548565b6040516100e3929190610efd565b6100c16101e5366004610f19565b6106db565b6100c16101f8366004610e09565b61092d565b8060005b81811015610361577f000000000000000000000000000000000000000000000000000000000000000042101561024a5760405163f3bc357f60e01b815260040160405180910390fd5b33600090815260016020526040812085858481811061026b5761026b610f45565b905060200201358154811061028257610282610f45565b9060005260206000209060030201905060006102b7338787868181106102aa576102aa610f45565b905060200201354261040e565b9050808260010160008282546102cd9190610f71565b9091555061030790506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633836109ab565b8086868581811061031a5761031a610f45565b90506020020135336001600160a01b03167f9923b4306c6c030f2bdfbf156517d5983b87e15b96176da122cd4f2effa4ba7b60405160405180910390a45050600101610201565b50505050565b6001600160a01b0381166000908152600160209081526040808320805482518185028101850190935280835260609492939192909184015b828210156103ef578382906000526020600020906003020160405180606001604052908160008201548152602001600182015481526020016002820154815250508152602001906001019061039f565b505050509050919050565b610402610a13565b61040c6000610a6d565b565b60007f0000000000000000000000000000000000000000000000000000000000000000821015610440575060006104ff565b6001600160a01b038416600090815260016020526040812080548590811061046a5761046a610f45565b90600052602060002090600302019050600081600201548461048c9190610f8a565b9050600061049d62278d0083610f9d565b9050600060068210156104e0576127106104b961053584610fbf565b6104c5906107d0610f71565b85546104d19190610fbf565b6104db9190610f9d565b6104e3565b83545b905060008460010154826104f79190610f8a565b955050505050505b9392505050565b6001602052816000526040600020818154811061052257600080fd5b600091825260209091206003909102018054600182015460029092015490935090915083565b610550610d5a565b610558610d5a565b6001600160a01b038416600090815260016020526040812080548590811061058257610582610f45565b9060005260206000209060030201905060008160020154846000600781106105ac576105ac610f45565b60200201528154612710906105c4906107d090610fbf565b6105ce9190610f9d565b835260015b6105df60066001610f71565b8110156106d157836105f2600183610f8a565b6007811061060257610602610f45565b60200201516106119083610f71565b91508461061f600183610f8a565b6007811061062f5761062f610f45565b60200201516106419062278d00610f71565b85826007811061065357610653610f45565b6020020152600061271061066961053584610fbf565b610675906107d0610f71565b85546106819190610fbf565b61068b9190610f9d565b9050600682146106a45761069f8382610f8a565b6106b1565b83546106b1908490610f8a565b8583600781106106c3576106c3610f45565b6020020152506001016105d3565b5050509250929050565b816000036106fc5760405163821f9e4f60e01b815260040160405180910390fd5b6107316001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333085610abd565b6001600160a01b038116600090815260016020819052604090912054908114801561077b57507f000000000000000000000000000000000000000000000000000000000000000042105b156107dc576001600160a01b0382166000908152600160205260408120805482906107a8576107a8610f45565b90600052602060002090600302019050838160000160008282546107cc9190610f71565b90915550600092506108f0915050565b7f00000000000000000000000000000000000000000000000000000000000000006000428211610891574291506127106108186107d087610fbf565b6108229190610f9d565b90506108586001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001685836109ab565b8083856001600160a01b03167f9923b4306c6c030f2bdfbf156517d5983b87e15b96176da122cd4f2effa4ba7b60405160405180910390a45b6001600160a01b038416600090815260016020818152604080842081516060810183528a815280840196875291820196875280548085018255908552919093209251600390910290920191825591519181019190915590516002909101555b8281836001600160a01b03167fe37037c1b3b5a7099de9b4ff0b386af195061ad990fcf5c0c5f84b95d328f76660405160405180910390a4505050565b610935610a13565b6001600160a01b03811661099f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6109a881610a6d565b50565b6040516001600160a01b038316602482015260448101829052610a0e90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610af5565b505050565b6000546001600160a01b0316331461040c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610996565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b03808516602483015283166044820152606481018290526103619085906323b872dd60e01b906084016109d7565b6000610b4a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610bca9092919063ffffffff16565b9050805160001480610b6b575080806020019051810190610b6b9190610fd6565b610a0e5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610996565b6060610bd98484600085610be1565b949350505050565b606082471015610c425760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610996565b600080866001600160a01b03168587604051610c5e919061101c565b60006040518083038185875af1925050503d8060008114610c9b576040519150601f19603f3d011682016040523d82523d6000602084013e610ca0565b606091505b5091509150610cb187838387610cbc565b979650505050505050565b60608315610d2b578251600003610d24576001600160a01b0385163b610d245760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610996565b5081610bd9565b610bd98383815115610d405781518083602001fd5b8060405162461bcd60e51b81526004016109969190611038565b6040518060e001604052806007906020820280368337509192915050565b60008060208385031215610d8b57600080fd5b823567ffffffffffffffff80821115610da357600080fd5b818501915085601f830112610db757600080fd5b813581811115610dc657600080fd5b8660208260051b8501011115610ddb57600080fd5b60209290920196919550909350505050565b80356001600160a01b0381168114610e0457600080fd5b919050565b600060208284031215610e1b57600080fd5b6104ff82610ded565b602080825282518282018190526000919060409081850190868401855b82811015610e705781518051855286810151878601528501518585015260609093019290850190600101610e41565b5091979650505050505050565b600080600060608486031215610e9257600080fd5b610e9b84610ded565b95602085013595506040909401359392505050565b60008060408385031215610ec357600080fd5b610ecc83610ded565b946020939093013593505050565b8060005b6007811015610361578151845260209384019390910190600101610ede565b6101c08101610f0c8285610eda565b6104ff60e0830184610eda565b60008060408385031215610f2c57600080fd5b82359150610f3c60208401610ded565b90509250929050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610f8457610f84610f5b565b92915050565b81810381811115610f8457610f84610f5b565b600082610fba57634e487b7160e01b600052601260045260246000fd5b500490565b8082028115828204841417610f8457610f84610f5b565b600060208284031215610fe857600080fd5b815180151581146104ff57600080fd5b60005b83811015611013578181015183820152602001610ffb565b50506000910152565b6000825161102e818460208701610ff8565b9190910192915050565b6020815260008251806020840152611057816040850160208701610ff8565b601f01601f1916919091016040019291505056fea264697066735822122000acea694c3f032e542e8f4118511fd6e4b211b909020c6a1f092caeeaf7dbdd64736f6c63430008170033";

type FMBCVestingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FMBCVestingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FMBCVesting__factory extends ContractFactory {
  constructor(...args: FMBCVestingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _tgeTimestamp: PromiseOrValue<BigNumberish>,
    _fmbcTokenAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FMBCVesting> {
    return super.deploy(
      _tgeTimestamp,
      _fmbcTokenAddress,
      overrides || {}
    ) as Promise<FMBCVesting>;
  }
  override getDeployTransaction(
    _tgeTimestamp: PromiseOrValue<BigNumberish>,
    _fmbcTokenAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _tgeTimestamp,
      _fmbcTokenAddress,
      overrides || {}
    );
  }
  override attach(address: string): FMBCVesting {
    return super.attach(address) as FMBCVesting;
  }
  override connect(signer: Signer): FMBCVesting__factory {
    return super.connect(signer) as FMBCVesting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FMBCVestingInterface {
    return new utils.Interface(_abi) as FMBCVestingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FMBCVesting {
    return new Contract(address, _abi, signerOrProvider) as FMBCVesting;
  }
}
